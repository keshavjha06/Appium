Android Studio :
c:\users\keshav\appdata\local\Android\SDK - system variable - ANDROID_HOME
c:\users\keshav\appdate\local\android\sdk\tools\bin -  In Path folder
c:\users\keshav\appdate\local\android\sdk\tools - In path folder
C:\Users\keshav\AppData\local\Android\Sdk\platform-tools -In Path folder

Node.JS:
C:\Program Files\nodejs -system variable -NODE_HOME
C:\Program Files\nodejs\node_modules\npm\bin - in path folder

command prompt:
npm install -g appium-->enter
appium -->enter to start appium
ctrl+ c then Y to end session
appium - p 4725 to change defaultport(4723)
npm uninstall -g appium - for uninstalling appium

cd C:\Users\Keshav\AppData\Local\Android\Sdk\platform-tools - emulator -avd Demo

install app in emulator
C:\Users\Keshav\AppData\Local\Android\Sdk\platform-tools

adb install C:\Users\Keshav\Downloads\General-Store.apk
adb install C:\Users\Keshav\Downloads\ApiDemos-debug.apk


//adb devices- Unauthorized
//adb kill-server
//adb start-server
//adb devices


C:\Users\Keshav\AppData\Local\Android\Sdk\tools\bin - forUi automator

default toast message:
android.widget.Toast[1] -for 1st toast message

C:\Users\Keshav\eclipse-workspace\Mavenjava 

mvn clean 
mvn compile
mvn test
mvn clean install


mvn test -P(P stands for profile) and then name Regression/Smoke

ex:mvn test -PSmoke

C:\Users\Keshav\eclipse-workspace\AppiumFramework
mvn test -Ddevicename=Keshav- mvn command to run test case from cmd.


C:\Users\Keshav\Downloads - jenkins path
java -jar jenkins.war -httpPort=8080
username-admin
851bb44baebf4dee9da6674f00444163 - password
Goals-> test -DdeviceName=Keshav
test -DdeviceName="$deviceType"
emulator-5554 - name for emulator should be given
${JENKINS_HOME}/Mavenjava - Directory

M H D M DAYWeek
0 8 * * * -> 7:14 am daily (*) means everyday

taskkill /F /IM node.exe - command to kill all ports termination.

Page Object Pattern:
Easy to Maintain
Easy Readablility of scripts
Reduce or eliminate duplicacy
Re-usability of code
Reliability


maven:
1.central repository to get dependencies
2.Maintaining common structure across the organization
3.Flexibility in integrating with CI tools
4.Plugins for Test framework execution

-->artifact id  is project name
-->.m2 repository will check(local folders)
-->surefire plugin - it run test cases
-->Test should be name of class file for maven
-->we can have multiple testng xml suites by maintaining profiles

0. Tapping and longpress events (Gestures Automation -2)
import import static io.appium.java_client.touch.offset.ElementOption.element;

import manually

when we have multiple objects with same name we can go with index

udemy notes:

5. Native APPS Automation
30. Tapping and longpress events (Gestures Automation -2)
import static io.appium.java_client.touch.TapOptions.tapOptions;



import manually the package

5. Native APPS Automation
31. Touch Actions Sequence Execution
import



import static io.appium.java_client.touch.LongPressOptions.longPressOptions;


5. Native APPS Automation
32. Strategy for automating Swipping event(Gestures Automation -3)
if there are special symbols ($) in classname then xpath doesn't recognises it as tagname. put * instead of tagname

11:38
6. Advanced Gestures Automation with Key Events Handling
34. How to automate scrolling? Gestures Automation -5
android api code ("new UiScrollable(new UiSelector()).scrollIntoView(text(\"Radio Group\"));") )executing inside this function and not at all related to appium.

2:15
8. Real time Ecommerce App- Practise Exercises
54. Testcase-Dynamically selecting Product by scanning list based on text
instance(0) means the first matched element with given condition.

Add testng jar file, if testng methods don't work.Add common lang jar file if appium doesn't click on elements.

if facing issues with taking screenshot then enable developer options in emulator and start basic test. or stop the appium server.

default toast message:

android.widget.Toast[1] -for 1st toast message

install app in emulator

C:\Users\Keshav\AppData\Local\Android\Sdk\platform-tools

adb install C:\Users\Keshav\Downloads\General-Store.apk

C:\Users\Keshav\AppData\Local\Android\Sdk\tools\bin - forUi automator


14:58
8. Real time Ecommerce App- Practise Exercises
57. TestCase- Validating the orders in checkout page
driver.findElementsByXPath("//*[@text='ADD TO CART']").get(0).click();

driver.findElementsByXPath("//*[@text='ADD TO CART']").get(0).click();

in the first instance after adding product to cart, the text changes to added to cart so appium will not recognize the element.so that's why we should keep get(0) to identify the second element and it will add it to the cart

13:02
8. Real time Ecommerce App- Practise Exercises
58. TestCase- Validating Total amount generated functionality
if the objects are same in multiple page ,then put Thread.sleep(5000);

6:27
8. Real time Ecommerce App- Practise Exercises
58. TestCase- Validating Total amount generated functionality
decimal return type is double and not integer

0:17
8. Real time Ecommerce App- Practise Exercises
59. Code optimization with user defined functions
function should be written outside of public static void main

11:01
8. Real time Ecommerce App- Practise Exercises
61. Testcase - Validating Mobile Gestures of App ( Tap, Long Press)
import static io.appium.java_client.touch.TapOptions.tapOptions;

import static io.appium.java_client.touch.LongPressOptions.longPressOptions;

import static io.appium.java_client.touch.offset.ElementOption.element;

import static java.time.Duration.ofSeconds;

need to import these packages manually for mobile gestures becoz eclipse will not give auto import for static packages.

12:17
9. Hybrid App Automation with Appium
63. TestCase -Automate Hybrid App with context Switch
cssSelectors and name attribute is not supported by appium.locators of appium are:
ID
Class Name
Xpath
Accessibility ID
Android UI Automator

5:47
9. Hybrid App Automation with Appium
63. TestCase -Automate Hybrid App with context Switch
replace the chrome version file in appium folder (C:\Users\Keshav\AppData\Roaming\npm\node_modules\appium\node_modules\appium-chromedriver\chromedriver\win)

6:45
10. IOS Automation with Appium on MAC
65. IOS Testing Introduction
.app file and simulator for ios & apk and emulator for android

9:08
13. Appium Framemwork- Part 1- Learn TestNG Basics
86. Testng Xml file configuration and its importance
<class name=".Basics1"/>  it is class name with default package.so that is why .Basics1 .with package ex test then it will be test.Basics1

6:34
13. Appium Framemwork- Part 1- Learn TestNG Basics
91. TestNG Annotations part - 2
testcases and methods are same in testng.test and suite are related to xml file.beforemethod &before class is specific to class file and it executes before  each and every method(class level)

13:55
13. Appium Framemwork- Part 1- Learn TestNG Basics
92. Usage of Groups functionality in TestNG
There are 100 I want to run only 40 then I will use groups

3:35
13. Appium Framemwork- Part 1- Learn TestNG Basics
92. Usage of Groups functionality in TestNG
testng execution order depends on alphabetical order M,W etc

7:53
13. Appium Framemwork- Part 1- Learn TestNG Basics
93. Annotations helper attributes with examples
dependsOnMethods,timeOut, -->enabled = false(testng helper attributes),will not run particular testcase

9:42
13. Appium Framemwork- Part 1- Learn TestNG Basics
95. DataProvider Annotation -Parameterizing Testcases - 1
data provider is used to test combination with different data

6:48
13. Appium Framemwork- Part 1- Learn TestNG Basics
96. DataProvider Annotation -Parameterizing Testcases-2
How to achieve parameterisation in testng- in two ways we can do - drive the data from testng xml or drive the data and we can parameterize it  using data provider annotation.

0:26
14. Framework Part 2 -Maven (Build Management tool)
100. Introduction to Maven
maven is software project management and build management tool for java frameworks

10:13
14. Framework Part 2 -Maven (Build Management tool)
104. Importance of surefirePlugin in executing Tests
Test keyword should be added at the end of each java class file for maven to recognize it.

3:21
17. End to End Framework design from Scratch part -1 (Design Patterns)
119. Converting Project into Testng & eliminating hardcoded paths
current project path

System.getProperty("user.dir")

9:23
17. End to End Framework design from Scratch part -1 (Design Patterns)
119. Converting Project into Testng & eliminating hardcoded paths
for json to web element converter error, add old selenium dependency(3.141.59) in pom.xml file, for indexoutofbound exception add implicit wait or add thread.sleep.

0:36
18. End to End Framework design from Scratch part -2 (Building Utilities)
130. Sending Global properties from Maven commands into tests
remove <source>test</source> fromt testng dependency to remove error in pom.xml execution

iOS:
from mac we can work both on android and iOS so platform name is required.
XCUITest in iOS
accessibilityId can be only used for iOS
Appium inspector for iOS like uiautomatorviewer for android
Appium server start from Appium desktop
simulator

for scrolling in iOS below code:
Dimension size = driver.manage().window().getSize();
        int x = size.getWidth() / 2;
        int starty = (int) (size.getHeight() * 0.60);
        int endy = (int) (size.getHeight() * 0.10);
        driver.swipe(x, starty, x, endy, 2000);

provisioning profile of webdriveragentrunner

